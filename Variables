Common:

class
  A global variable which determines what default device names to use, which
  files in /etc/nbsvm to use, etc. If not set and the command being called
  (specifically, $0) is not nbsvm, then class is assumed to be the command name
  with the "vm" suffix stripped.

  Default:
    none unless the command called is not nbsvm, in which case it is that
    command with the 'vm' suffix stripped.


debug
  Flag to print debugging output (set -x)

  Default: none


drawer
  Where kvm keeps its socks.

  Default: /var/lib/nbsvm/$vm or /var/lib/nbsvm-class/$vm
  If /var/lib doesn't exist, the default is rooted in /var directly instead.


vnc_port
  The method used to connect a VNC client to KVM is a pretty bad jury rig using
  socat to forward the unix socket listened to by kvm to a localhost TCP socket
  which vncviewer (whatever that points to) connects to. This means that
  everything tries to listen to (which eventually fails) and connect to (which
  doesn't) port 5900. Override the port with this.

  Default: 5900


Execution:

args
  An array of arguments to append to the kvm command line. Any arguments to the
  start command up to but not including an optional -- are appended to $args
  before using it to run kvm.

  Default: none


display
  Options controlling how to run the display.

  Default: -display vnc=unix:$drawer/vnc.sock


group
  The group which shares socks.

  Default: Current user's


hypervisor
  The kvm binary to call.

  Default: kvm


log
  Where to send qemu's output.

  Default: $debug or /dev/null; /dev/stderr if $debug is exactly '1'.


mem
  Amount of RAM to start the VM with in MB.

  Default: 512M


root
  How to gain root when necessary. Set it to ' ' to run entirely unprivileged
  but note that some functionality may be unavailable.

  Default: doas on OpenBSD, sudo on everything else.


smp
  Options to pass to -smp. Typically an integer number of CPUs.

  Default: none


socat_tty
  The local address to connect to the unix socket using socat's
  UNIX-CONNECT address type in the serial and monitor commands.

  Default (on tty): -,raw,echo=0,escape=0x1d
  Default (no tty): -


usb
  Full override of USB settings. By default there are USB devices so in order
  to start a VM without USB this needs to be set to whitespace. The null string
  is regrettably insufficient to disable USB entirely.
  Default: -usb -usbdevice tablet



Storage:

bs
  A value to be used in place of the default 1MB bs option to dd, used by the
  clone command.

  Default: $BLOCKSIZE or 1048576 (1MB)


ddopt
  Extra options included verbatim in the dd command (without quoting).

  Default: none


drive_if
  The interface type to use to connect the default drives.

  Default: virtio


drives
  If set, overrides any attempt by lvm to calculate drives and drive options.

  Default: none


drive_size
  Size (passed to lvcreate -L) of new drives.

  Default: 10G


gold
  Used to construct the name of the snapshot to create, or the snapshot to
  clone to a new device. See $source for a complete description.

  Default: gold


lv_name
  The name of the LV which newimage will create on the LVM backend. Not used by
  clone or snapshot. $next is a number calculated by counting the existing
  drives, starting at 0.

  Default: nbsvm-$vm-$next or nbsvm-$class-$vm-$next.


store
  The type of storage backend to use. "lvm", "zfs" or "file:/path/to/root"

  Default: lvm


snapshot_id
  The numeric id of the drive to snapshot, See $source for a complete
  description.

  Default: 0


snapshot_name
  The filename of the device to snapshot to or from. See $source for a complete
  description.

  Default (lvm snapshot): nbsvm-$vm-0 or nbsvm-$class-$vm-0

  Default (lvm clone): nbsvm-$gold or nbsvm-$class-$gold

  Default (zfs snapshot): nbsvm-$vm-0 or nbsvm-$class-$vm-0

  Default (zfs clone): nbsvm@$gold or nbsvm-$class@$gold


snapshot_size
  The size of the COW space to create an LVM snapshot in.

  Default: 2G


source
  The full path to the device to snapshot (or snapshot to clone) without the
  "/dev/" or "/dev/zvol/" prefix. When creating a snapshot, "-$gold" (lvm) or
  "@gold" (zfs) is appended. When cloning a snapshot it must be included.

  Ordinarily the source is calculated from $vg or $zpool and $snapshot_name,
  which differs depending on whether a snapshot is being made or being used.
  When creating a snapshot, snapshot_name is $prefix-$vm-$id. When cloning a
  snapshot it is $prefix-$gold (or $prefix@$gold on zfs).

    $prefix is nbsvm or nbsvm-$class.
    $id is $snapshot_id or "0".

  Examples:

  Create the snapshot ocean/master-gold (zfs: ocean/master@gold)
  $ source=ocean/master nbsvm foo snapshot

  Create a backup of disc 3 on bar
  $ snapshot_id=3 gold=backup nbsvm bar snapshot
  Alternatively:
  $ source=vg0/nbsvm-bar-3 gold=backup nbsvm bar snapshot

  Clone master-gold (zfs: master@gold) in whatever zpool foo currently uses:
  $ snapshot_name=master nbsvm foo clone

  Clone nbsvm-master (zfs: nbsvm@master) in whatever zpool foo currently uses:
  $ gold=master nbsvm foo clone


vg
  Where to create and look for VM image devices on LVM.

  Default: vg0


zpool
  Where to create and look for VM image devices on ZFS.

  Default: tank



Networking:

bridge
  The network bridge to add the default network tap device (tap-$vm or
  tap-$class-$vm) to using "brctl addif $bridge". If $bridge is not set, or
  $network is, this action is not performed.

  Default: none


net_if
  The network device type to emulate. See network for a fuller description.

  Default: virtio-net-pci


network
  Override all network settings.
  
  The default network configuration is to have one network device (named net)
  of type $netif. If the mac variable is set it specifies the emulated device's
  mac address. The device is paired on the host with a tap device named
  tap-$vm or tap-$class-$vm.

  The exact configuration used is:
          -device ${net_if:-virtio-net-pci},netdev=net${mac:+,mac=$mac}
          -netdev tap,id=net,ifname=tap-${class:+$class-}$vm,script=no,downscript=no
  
  If the network variable is not set, then nbsvm is using its default network
  configuration and the tap device is brought up:
          ifconfig tap-${class:+$class-}$vm up
  
  If the network variable is not set _AND_ the bridge variable _IS_ set, then
  the newly-brought up tap device is added to that bridge:
          brctl addif $bridge tap-${class:+$class-}$vm
